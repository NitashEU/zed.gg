{"version":3,"file":"requester.js","sourceRoot":"","sources":["../../../src/helpers/requester.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AAEnC,OAAO,EAAE,cAAc,EAAE,MAAM,mCAAmC,CAAC;AACnE,OAAO,EAAE,uBAAuB,EAAE,MAAM,6CAA6C,CAAC;AAGtF,MAAM;IAIJ,YAAY,WAAiC;QAC3C,WAAW,GAAG,CAAC,WAAW;cACtB,EAAE;cACF,WAAW,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IAEM,GAAG,CAAC,GAAW,EAAE,OAA6B;QACnD,MAAM,CAAC,IAAI,OAAO,CAAiB,CAAC,OAAO,EAAE,MAAM;YACjD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,IAAI;gBAC3C,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzD,MAAM,CAAC,IAAI,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,UAA4B,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvH,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAA4B,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1F,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import * as request from 'request';\r\n\r\nimport { CustomResponse } from './../models/custom-response.model';\r\nimport { CustomResponseException } from './../models/custom-response-exception.model';\r\nimport { HttpStatusCode } from './../enums/http-status-code.enum'\r\n\r\nexport class Requester {\r\n  private baseRequest: request.RequestAPI<request.Request, request.CoreOptions, request.RequiredUriUrl>;\r\n  private baseOptions: request.CoreOptions;\r\n\r\n  constructor(baseOptions?: request.CoreOptions) {\r\n    baseOptions = !baseOptions\r\n      ? {}\r\n      : baseOptions;\r\n    this.baseOptions = baseOptions;\r\n    this.baseRequest = request.defaults(baseOptions);\r\n  }\r\n\r\n  public get(url: string, options?: request.CoreOptions): Promise<CustomResponse> {\r\n    return new Promise<CustomResponse>((resolve, reject) => {\r\n      this.baseRequest.get(url, options, (err, data) => {\r\n        if (err || (!!data.statusCode && data.statusCode >= 400)) {\r\n          reject(new CustomResponseException(this.baseOptions.baseUrl + url, data.statusCode as HttpStatusCode, data.headers));\r\n        }\r\n        else {\r\n          resolve(new CustomResponse(data.body, data.statusCode as HttpStatusCode, data.headers));\r\n        }\r\n      });\r\n    });\r\n  }\r\n}"]}